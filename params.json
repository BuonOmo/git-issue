{"name":"Git-issue","body":"git-issue\r\n====================================================\r\n\r\ngit subcommand of browse/modify issue traker's tickets.\r\n\r\nnow available issue-tracker system is Redmine and Github-issues.\r\n\r\n## ScreenShots\r\n\r\n<img src='https://github.com/yuroyoro/git-issue/raw/master/images/git-issue_screenshot-1.png' width='600'/>\r\n<img src='https://github.com/yuroyoro/git-issue/raw/master/images/git-issue_screenshot-2.png' width='600'/>\r\n\r\n## Instration\r\n\r\n    $ gem install git-issue\r\n\r\n    or\r\n\r\n    $ git clone https://github.com/yuroyoro/git-issue.git\r\n    $ cd git-issue\r\n    $ gem install jeweler\r\n    $ rake install\r\n\r\n## Configuration\r\n\r\nset type of issue traking system(redmine or github)\r\n\r\n    $ git config issue.type redmine\r\n\r\nset url of issue traking system's api endopoint.\r\n\r\n    $ git config issue.url http://redmine.example.com\r\n\r\nset api-key for accessing issue traking system.\r\n\r\n    $ git config issue.apikey FWeaj3I9laei03A....\r\n\r\nset repository name if using github.\r\n\r\n    $ git config issue.repo gitterb\r\n\r\nset your account name if using github.\r\n\r\n    $ git config issue.user yuroyoro\r\n\r\n## Usage(Redmine)\r\n\r\n    git issue <command> [ticket_id] [<args>]\r\n\r\n    Commnads:\r\n      show     s show given issue summary. if given no id,  geuss id from current branch name.\r\n      list     l listing issues.\r\n      mine     m display issues that assigned to you.\r\n      commit   c commit with filling issue subject to messsage.if given no id, geuss id from current branch name.\r\n      add      a create issue.\r\n      update   u update issue properties. if given no id, geuss id from current branch name.\r\n      branch   b checout to branch using specified issue id. if branch dose'nt exisits, create it. (ex ticket/id/<issue_id>)\r\n      publish  pub push branch to remote repository and set upstream\r\n      rebase   rb rebase branch onto specific newbase\r\n      help     h show usage.\r\n      local    loc listing local branches tickets\r\n      project  pj listing ticket belongs to sspecified project\r\n\r\n    Options:\r\n      -a, --all                        update all paths in the index file\r\n      -f, --force                      force create branch\r\n      -v, --verbose                    show issue details\r\n      -n, --max-count=VALUE            maximum number of issues\r\n          --oneline                    display short info\r\n          --raw-id                     output ticket number only\r\n          --remote=VALUE               on publish, remote repository to push branch\r\n          --onto=VALUE                 on rebase, start new branch with HEAD equal to \"newbase\"\r\n          --debug                      debug print\r\n      -j, --supperss_journals          do not show issue journals\r\n      -r, --supperss_relations         do not show issue relations tickets\r\n      -c, --supperss_changesets        do not show issue changesets\r\n      -q, --query=VALUE                filter query of listing tickets\r\n          --project_id=VALUE           use the given value to create subject\r\n          --description=VALUE          use the given value to create subject\r\n          --subject=VALUE              use the given value to create/update subject\r\n          --ratio=VALUE                use the given value to create/update done-ratio(%)\r\n          --status=VALUE               use the given value to create/update issue statues id\r\n          --priority=VALUE             use the given value to create/update issue priority id\r\n          --tracker=VALUE              use the given value to create/update tracker id\r\n          --assigned_to_id=VALUE       use the given value to create/update assigned_to id\r\n          --category=VALUE             use the given value to create/update category id\r\n          --fixed_version=VALUE        use the given value to create/update fixed_version id\r\n          --custom_fields=VALUE        value should be specifies '<custom_fields_id1>:<value2>,<custom_fields_id2>:<value2>, ...'\r\n          --notes=VALUE                add notes to issue\r\n\r\n## Usage(Github Issues)\r\n\r\n    git issue <command> [ticket_id] [<args>]\r\n\r\n    Commnads:\r\n      show     s show given issue summary. if given no id,  geuss id from current branch name.\r\n      list     l listing issues.\r\n      mine     m display issues that assigned to you.\r\n      commit   c commit with filling issue subject to messsage.if given no id, geuss id from current branch name.\r\n      add      a create issue.\r\n      update   u update issue properties. if given no id, geuss id from current branch name.\r\n      branch   b checout to branch using specified issue id. if branch dose'nt exisits, create it. (ex ticket/id/<issue_id>)\r\n      publish  pub push branch to remote repository and set upstream\r\n      rebase   rb rebase branch onto specific newbase\r\n      help     h show usage.\r\n      mention  men create a comment to given issue\r\n\r\n    Options:\r\n      -a, --all                        update all paths in the index file\r\n      -f, --force                      force create branch\r\n      -v, --verbose                    show issue details\r\n      -n, --max-count=VALUE            maximum number of issues\r\n          --oneline                    display short info\r\n          --raw-id                     output ticket number only\r\n          --remote=VALUE               on publish, remote repository to push branch\r\n          --onto=VALUE                 on rebase, start new branch with HEAD equal to \"newbase\"\r\n          --debug                      debug print\r\n      -s, --supperss_commentsc         show issue journals\r\n          --title=VALUE                Title of issue.Use the given value to create/update issue.\r\n          --body=VALUE                 Body content of issue.Use the given value to create/update issue.\r\n          --state=VALUE                Use the given value to create/update issue. or query of listing issues.Where 'state' is either 'open' or 'closed'\r\n          --milestone=VALUE            Use the given value to create/update issue. or query of listing issues, (Integer Milestone number)\r\n          --assignee=VALUE             Use the given value to create/update issue. or query of listing issues, (String User login)\r\n          --mentioned=VALUE            Query of listing issues, (String User login)\r\n          --labels=VALUE               Use the given value to create/update issue. or query of listing issues, (String list of comma separated Label names)\r\n          --sort=VALUE                 Query of listing issues, (created,  updated,  comments,  default: created)\r\n          --direction=VALUE            Query of listing issues, (asc or desc,  default: desc.)\r\n          --since=VALUE                Query of listing issue, (Optional string of a timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ)\r\n          --password=VALUE             For Authorizaion of create/update issue.  Github API v3 does'nt supports API token base authorization for now. then, use Basic Authorizaion instead token.\r\n          --sslnoverify                don't verify SSL\r\n\r\n## Copyright\r\n\r\nCopyright (c) 2011 Tomohito Ozaki. See LICENSE for details.","tagline":"git subcommand of browse/modify issue traker's tickets.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}